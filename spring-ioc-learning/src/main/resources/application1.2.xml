<?xml version="1.0" encoding="UTF-8"?>
<beans profile="dev"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
">

    <context:annotation-config/>
    <context:component-scan base-package="com.springioc.learning"/>

<!--    aop方式1 -->
    <bean id="testServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
<!--        代理的接口-->
        <property name="proxyInterfaces">
            <list>
                <value>com.springioc.learning.spring1_2.aop.TestService</value>
            </list>
        </property>
<!--        代理的具体实现-->
        <property name="target" ref="testServiceImpl"/>
<!--        配置拦截器，这里可以配置advice ,advisor,interceptor-->
        <property name="interceptorNames">
            <list>
                <value>myAfterReturningAdvice</value>
                <value>myBeforeAdvice</value>
            </list>
        </property>
    </bean>





<!--    aop方式2-->
<!--    定义一个advisor-->
    <bean id="myBeforeAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice" ref="myBeforeAdvice"/>
        <property name="mappedNames" value="test"/>
    </bean>
    <bean id="myAfterReturningAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice" ref="myAfterReturningAdvice"/>
        <property name="mappedNames" value="test"/>
    </bean>

    <bean id="test2ServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--        代理的接口-->
        <property name="proxyInterfaces">
            <list>
                <value>com.springioc.learning.spring1_2.aop.TestService</value>
            </list>
        </property>
        <!--        代理的具体实现-->
        <property name="target" ref="testServiceImpl"/>
        <!--        配置拦截器，这里可以配置advice ,advisor,interceptor-->
        <property name="interceptorNames">
            <list>
                <value>myBeforeAdvisor</value>
                <value>myAfterReturningAdvisor</value>
            </list>
        </property>
    </bean>



<!--    aop方式3-->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <value>myBeforeAdvisor</value>
                <value>myAfterReturningAdvisor</value>
            </list>
        </property>
        <property name="beanNames" value="testServiceImpl"/>
    </bean>



<!--    aop方式4-->
    <bean class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="myAfterReturningAdvice"/>
        <property name="patterns" value="com.springioc.learning.spring1_2.aop.*Impl.*"/>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
</beans>